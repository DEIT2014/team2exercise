**5.dart中列表定义和使用方法**
在dart官网中，部分英文原文如下：

**Lists**
Perhaps the most common collection in nearly every programming language is the array, or ordered group of objects. In Dart, arrays are List objects, so we usually just call them lists.
Dart list literals look like JavaScript array literals. Here’s a simple Dart list:
**var list = [1, 2, 3];**
Lists use zero-based indexing, where 0 is the index of the first element and list.length - 1 is the index of the last element. You can get a list’s length and refer to list elements just as you would in JavaScript:
**var list = [1, 2, 3];**
**assert(list.length == 3);**
**assert(list[1] == 2);**

**list[1] = 1;**
**assert(list[1] == 1);**
To create a list that’s a compile-time constant, add const before the list literal:

**var constantList = const [1, 2, 3];**

**// constantList[1] = 1; // Uncommenting this causes an error.**
The List type has many handy methods for manipulating lists. For more information about lists, see Generics and Collections.

根据我的理解，综合整个网站的数组介绍，我将其翻译为中文：

在Dart中数组也叫列表list.

定义一个数组：

    var list = [1,2,3];  
    var constantList = const [1, 2, 3];//创建常量列表

  操作数组：

    var list = [1,2,3];  
    assert(list.length == 3);
    assert(list[1] == 2);
    
    list[1] = 1;
    assert(list[1] == 1)

  给数组添加元素：

    var list = [1,2,3];  
    list.add(4);  

  从数组中删除一定范围内的元素：

    var list = [1,2,3,4];  
    list.removeRange(2, 1); // remove the third element  

可以使用for, for...in, 或forEach()几种方式遍历数组，

使用for:

    var list = [1,2,3];  
    for (var x = 0; x < list.length; x++) {  
      print('$x: ${list[x]}');  
    }  

  for...in:

    var list = [1,2,3];  
    for (final x in list) {  
      print(x);  
    }  

  forEach():

    var list = [1,2,3] 
    void printElement(element) => print(element);  
    list.forEach(printElement);  

  可更简洁的方式：

    var list = [1,2,3];  
    list.forEach((element) => print(element));  
